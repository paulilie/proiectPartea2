//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotos
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyItems", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class MyItems : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MyPhotos.Dinamic[] DinamicsField;
        
        private MyPhotos.Event EventField;
        
        private string IDateField;
        
        private string IDeleteField;
        
        private string IDescriptionField;
        
        private int IIdField;
        
        private string IIsPhotoField;
        
        private string IMarkField;
        
        private string INameField;
        
        private string IPathField;
        
        private string ITypeField;
        
        private MyPhotos.Place PlaceField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Dinamic[] Dinamics
        {
            get
            {
                return this.DinamicsField;
            }
            set
            {
                this.DinamicsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Event Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDate
        {
            get
            {
                return this.IDateField;
            }
            set
            {
                this.IDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDelete
        {
            get
            {
                return this.IDeleteField;
            }
            set
            {
                this.IDeleteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDescription
        {
            get
            {
                return this.IDescriptionField;
            }
            set
            {
                this.IDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IId
        {
            get
            {
                return this.IIdField;
            }
            set
            {
                this.IIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IIsPhoto
        {
            get
            {
                return this.IIsPhotoField;
            }
            set
            {
                this.IIsPhotoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMark
        {
            get
            {
                return this.IMarkField;
            }
            set
            {
                this.IMarkField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IName
        {
            get
            {
                return this.INameField;
            }
            set
            {
                this.INameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPath
        {
            get
            {
                return this.IPathField;
            }
            set
            {
                this.IPathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IType
        {
            get
            {
                return this.ITypeField;
            }
            set
            {
                this.ITypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Place Place
        {
            get
            {
                return this.PlaceField;
            }
            set
            {
                this.PlaceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int EIdField;
        
        private string ENameField;
        
        private MyPhotos.MyItems[] MyItemsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EId
        {
            get
            {
                return this.EIdField;
            }
            set
            {
                this.EIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EName
        {
            get
            {
                return this.ENameField;
            }
            set
            {
                this.ENameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.MyItems[] MyItems
        {
            get
            {
                return this.MyItemsField;
            }
            set
            {
                this.MyItemsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Place", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class Place : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MyPhotos.MyItems[] MyItemsField;
        
        private int PIDField;
        
        private string PNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.MyItems[] MyItems
        {
            get
            {
                return this.MyItemsField;
            }
            set
            {
                this.MyItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PID
        {
            get
            {
                return this.PIDField;
            }
            set
            {
                this.PIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PName
        {
            get
            {
                return this.PNameField;
            }
            set
            {
                this.PNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dinamic", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class Dinamic : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DDescriptionField;
        
        private int DIdField;
        
        private MyPhotos.MyItems[] MyItemsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DDescription
        {
            get
            {
                return this.DDescriptionField;
            }
            set
            {
                this.DDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DId
        {
            get
            {
                return this.DIdField;
            }
            set
            {
                this.DIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.MyItems[] MyItems
        {
            get
            {
                return this.MyItemsField;
            }
            set
            {
                this.MyItemsField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IItemsService")]
public interface IItemsService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItems", ReplyAction="http://tempuri.org/IItemsService/GetItemsResponse")]
    MyPhotos.MyItems[] GetItems();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItems", ReplyAction="http://tempuri.org/IItemsService/GetItemsResponse")]
    System.Threading.Tasks.Task<MyPhotos.MyItems[]> GetItemsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddEvents", ReplyAction="http://tempuri.org/IItemsService/AddEventsResponse")]
    MyPhotos.Event AddEvents(string NameEvent);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddEvents", ReplyAction="http://tempuri.org/IItemsService/AddEventsResponse")]
    System.Threading.Tasks.Task<MyPhotos.Event> AddEventsAsync(string NameEvent);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddLocation", ReplyAction="http://tempuri.org/IItemsService/AddLocationResponse")]
    MyPhotos.Place AddLocation(string NameLocation);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddLocation", ReplyAction="http://tempuri.org/IItemsService/AddLocationResponse")]
    System.Threading.Tasks.Task<MyPhotos.Place> AddLocationAsync(string NameLocation);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/MarkToDelete", ReplyAction="http://tempuri.org/IItemsService/MarkToDeleteResponse")]
    void MarkToDelete(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/MarkToDelete", ReplyAction="http://tempuri.org/IItemsService/MarkToDeleteResponse")]
    System.Threading.Tasks.Task MarkToDeleteAsync(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetPlaceByName", ReplyAction="http://tempuri.org/IItemsService/GetPlaceByNameResponse")]
    MyPhotos.Place GetPlaceByName(string NameLocation);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetPlaceByName", ReplyAction="http://tempuri.org/IItemsService/GetPlaceByNameResponse")]
    System.Threading.Tasks.Task<MyPhotos.Place> GetPlaceByNameAsync(string NameLocation);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetEventByName", ReplyAction="http://tempuri.org/IItemsService/GetEventByNameResponse")]
    MyPhotos.Event GetEventByName(string NameEvent);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetEventByName", ReplyAction="http://tempuri.org/IItemsService/GetEventByNameResponse")]
    System.Threading.Tasks.Task<MyPhotos.Event> GetEventByNameAsync(string NameEvent);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddItems", ReplyAction="http://tempuri.org/IItemsService/AddItemsResponse")]
    void AddItems(MyPhotos.MyItems item, string eveniment, string loc);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddItems", ReplyAction="http://tempuri.org/IItemsService/AddItemsResponse")]
    System.Threading.Tasks.Task AddItemsAsync(MyPhotos.MyItems item, string eveniment, string loc);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/Move", ReplyAction="http://tempuri.org/IItemsService/MoveResponse")]
    void Move(string path1, string path2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/Move", ReplyAction="http://tempuri.org/IItemsService/MoveResponse")]
    System.Threading.Tasks.Task MoveAsync(string path1, string path2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/RemoveWithPath", ReplyAction="http://tempuri.org/IItemsService/RemoveWithPathResponse")]
    void RemoveWithPath(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/RemoveWithPath", ReplyAction="http://tempuri.org/IItemsService/RemoveWithPathResponse")]
    System.Threading.Tasks.Task RemoveWithPathAsync(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/Remove", ReplyAction="http://tempuri.org/IItemsService/RemoveResponse")]
    void Remove(MyPhotos.MyItems item);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/Remove", ReplyAction="http://tempuri.org/IItemsService/RemoveResponse")]
    System.Threading.Tasks.Task RemoveAsync(MyPhotos.MyItems item);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItemsByPlace", ReplyAction="http://tempuri.org/IItemsService/GetItemsByPlaceResponse")]
    MyPhotos.MyItems[] GetItemsByPlace(MyPhotos.Place place);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItemsByPlace", ReplyAction="http://tempuri.org/IItemsService/GetItemsByPlaceResponse")]
    System.Threading.Tasks.Task<MyPhotos.MyItems[]> GetItemsByPlaceAsync(MyPhotos.Place place);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItemsByProperty", ReplyAction="http://tempuri.org/IItemsService/GetItemsByPropertyResponse")]
    MyPhotos.MyItems[] GetItemsByProperty(MyPhotos.Dinamic property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItemsByProperty", ReplyAction="http://tempuri.org/IItemsService/GetItemsByPropertyResponse")]
    System.Threading.Tasks.Task<MyPhotos.MyItems[]> GetItemsByPropertyAsync(MyPhotos.Dinamic property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/SearchByProperty", ReplyAction="http://tempuri.org/IItemsService/SearchByPropertyResponse")]
    MyPhotos.MyItems[] SearchByProperty(string flag, string property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/SearchByProperty", ReplyAction="http://tempuri.org/IItemsService/SearchByPropertyResponse")]
    System.Threading.Tasks.Task<MyPhotos.MyItems[]> SearchByPropertyAsync(string flag, string property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/FindItem", ReplyAction="http://tempuri.org/IItemsService/FindItemResponse")]
    MyPhotos.MyItems FindItem(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/FindItem", ReplyAction="http://tempuri.org/IItemsService/FindItemResponse")]
    System.Threading.Tasks.Task<MyPhotos.MyItems> FindItemAsync(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/getPlaceByItem", ReplyAction="http://tempuri.org/IItemsService/getPlaceByItemResponse")]
    MyPhotos.Place getPlaceByItem(string Path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/getPlaceByItem", ReplyAction="http://tempuri.org/IItemsService/getPlaceByItemResponse")]
    System.Threading.Tasks.Task<MyPhotos.Place> getPlaceByItemAsync(string Path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/getEventByItem", ReplyAction="http://tempuri.org/IItemsService/getEventByItemResponse")]
    MyPhotos.Event getEventByItem(string Path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/getEventByItem", ReplyAction="http://tempuri.org/IItemsService/getEventByItemResponse")]
    System.Threading.Tasks.Task<MyPhotos.Event> getEventByItemAsync(string Path);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IItemsServiceChannel : IItemsService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ItemsServiceClient : System.ServiceModel.ClientBase<IItemsService>, IItemsService
{
    
    public ItemsServiceClient()
    {
    }
    
    public ItemsServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ItemsServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ItemsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ItemsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public MyPhotos.MyItems[] GetItems()
    {
        return base.Channel.GetItems();
    }
    
    public System.Threading.Tasks.Task<MyPhotos.MyItems[]> GetItemsAsync()
    {
        return base.Channel.GetItemsAsync();
    }
    
    public MyPhotos.Event AddEvents(string NameEvent)
    {
        return base.Channel.AddEvents(NameEvent);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Event> AddEventsAsync(string NameEvent)
    {
        return base.Channel.AddEventsAsync(NameEvent);
    }
    
    public MyPhotos.Place AddLocation(string NameLocation)
    {
        return base.Channel.AddLocation(NameLocation);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Place> AddLocationAsync(string NameLocation)
    {
        return base.Channel.AddLocationAsync(NameLocation);
    }
    
    public void MarkToDelete(string path)
    {
        base.Channel.MarkToDelete(path);
    }
    
    public System.Threading.Tasks.Task MarkToDeleteAsync(string path)
    {
        return base.Channel.MarkToDeleteAsync(path);
    }
    
    public MyPhotos.Place GetPlaceByName(string NameLocation)
    {
        return base.Channel.GetPlaceByName(NameLocation);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Place> GetPlaceByNameAsync(string NameLocation)
    {
        return base.Channel.GetPlaceByNameAsync(NameLocation);
    }
    
    public MyPhotos.Event GetEventByName(string NameEvent)
    {
        return base.Channel.GetEventByName(NameEvent);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Event> GetEventByNameAsync(string NameEvent)
    {
        return base.Channel.GetEventByNameAsync(NameEvent);
    }
    
    public void AddItems(MyPhotos.MyItems item, string eveniment, string loc)
    {
        base.Channel.AddItems(item, eveniment, loc);
    }
    
    public System.Threading.Tasks.Task AddItemsAsync(MyPhotos.MyItems item, string eveniment, string loc)
    {
        return base.Channel.AddItemsAsync(item, eveniment, loc);
    }
    
    public void Move(string path1, string path2)
    {
        base.Channel.Move(path1, path2);
    }
    
    public System.Threading.Tasks.Task MoveAsync(string path1, string path2)
    {
        return base.Channel.MoveAsync(path1, path2);
    }
    
    public void RemoveWithPath(string path)
    {
        base.Channel.RemoveWithPath(path);
    }
    
    public System.Threading.Tasks.Task RemoveWithPathAsync(string path)
    {
        return base.Channel.RemoveWithPathAsync(path);
    }
    
    public void Remove(MyPhotos.MyItems item)
    {
        base.Channel.Remove(item);
    }
    
    public System.Threading.Tasks.Task RemoveAsync(MyPhotos.MyItems item)
    {
        return base.Channel.RemoveAsync(item);
    }
    
    public MyPhotos.MyItems[] GetItemsByPlace(MyPhotos.Place place)
    {
        return base.Channel.GetItemsByPlace(place);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.MyItems[]> GetItemsByPlaceAsync(MyPhotos.Place place)
    {
        return base.Channel.GetItemsByPlaceAsync(place);
    }
    
    public MyPhotos.MyItems[] GetItemsByProperty(MyPhotos.Dinamic property)
    {
        return base.Channel.GetItemsByProperty(property);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.MyItems[]> GetItemsByPropertyAsync(MyPhotos.Dinamic property)
    {
        return base.Channel.GetItemsByPropertyAsync(property);
    }
    
    public MyPhotos.MyItems[] SearchByProperty(string flag, string property)
    {
        return base.Channel.SearchByProperty(flag, property);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.MyItems[]> SearchByPropertyAsync(string flag, string property)
    {
        return base.Channel.SearchByPropertyAsync(flag, property);
    }
    
    public MyPhotos.MyItems FindItem(string path)
    {
        return base.Channel.FindItem(path);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.MyItems> FindItemAsync(string path)
    {
        return base.Channel.FindItemAsync(path);
    }
    
    public MyPhotos.Place getPlaceByItem(string Path)
    {
        return base.Channel.getPlaceByItem(Path);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Place> getPlaceByItemAsync(string Path)
    {
        return base.Channel.getPlaceByItemAsync(Path);
    }
    
    public MyPhotos.Event getEventByItem(string Path)
    {
        return base.Channel.getEventByItem(Path);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Event> getEventByItemAsync(string Path)
    {
        return base.Channel.getEventByItemAsync(Path);
    }
}
